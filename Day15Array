//T001:
let name = new Array(5);
//T002:

let empty = new Array(3);
let empty1 = [, ,];
//T003:

let fruits = ["Mango", "Apple", "Pineap", "Grapse", "Pear", "Orange"];
console.log(fruits[fruits.length - 2]);

//T004:
for (i = 1; i < fruits.length; i += 2) {
  console.log(fruits[i]);
}

//T005:
fruits.unshift("papaya");
fruits.push("banana");
console.log(fruits);
//T006:

fruits.shift();
fruits.pop();
console.log(fruits);
//T007:

const foods = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J"];
let [, , , , , , sixth] = foods;
console.log(sixth);

//T008:
let [, , ...eigth] = foods;
console.log(eigth);

//T009
//T009
let original = [
  { name: "apple", color: "red" },
  { name: "banana", color: "yellow" },
];

let copy = [...original];
console.log(copy);
copy[0].name = "papaya";
console.log(copy[0]);
console.log(original[0]);

//T10
original.length = 0;
console.log(original);

//T11:
let num = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
for (let i = 0; i < num.length; i++) {
  if (num[i] == 5) {
    num.length = 6;
  }
}
console.log(num);

//T12:
num.splice(0, num.length);
console.log(num);

//t13:
let numbers = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];
numbers = [];
console.log(numbers);
//splice method might be best as it preserves the array:

//t14:
let arr1 = [];
let arr2 = [];
let arr3 = arr1.concat(arr2);
console.log(arr3);
//creates an empty array

//t15:
let cars = ["Mercedes", "Skoda", "Tata", "Creta", "Lamborghini", "Tercedes"];
let search = "edes";
console.log(cars.some((car) => car.includes(search)));
//t16:
//slice = returns the shallow copy of an array and doesn't change the original array
//splice = changes the original array by removing adding elements
let arr = [1, 2, 3, 4, 5];
let sliced = arr.slice(1, 4);

console.log(sliced);
console.log(arr);

//t17:
let alphanumericArray = [
  "a1",
  "b12",
  "z9",
  "apple123",
  "99balloons",
  "hello42",
  "abc123",
  "x7y8",
  "1stPlace",
  "code007",
];
let sorted = [...alphanumericArray].sort((a, b) => a.localeCompare(b));
console.log(sorted);
console.log(alphanumericArray);

//t18:
//dense array  = array with elements whose every index is filled
// sparse = array having empty indexes
let dense = [10, 20, 30, 40];
let sparse = [1, , 3];

//t19:
let defaultA = new Array(4).fill("0");
console.log(defaultA);

//t20:
//toString
let str = dense.toString();
console.log(str);

